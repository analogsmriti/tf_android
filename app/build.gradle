def bazel_location = '/usr/bin/bazel'

//This is the cpu arch for a samsung galaxy s7
def cpuType = 'arm64-v8a'
def nativeDir = 'lib/' + cpuType

//The location of the TF Fork
def tensorflow_location = '/home/ivan/deep-learning/tensorflow/'

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "iox.androidtensorflow"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    //Adding Tensorflow Inference Java Interface
    sourceSets {
        main.java.srcDirs += tensorflow_location + 'tensorflow/contrib/android/java/'
    }

    aaptOptions { noCompress 'pb' }
}

//These tasks will be executed after the dependencies are evaluated, therefore, if there is any
//update in the TF android lib you have to build the apk twice
task buildTFLib(type:Exec) {
    workingDir tensorflow_location
    commandLine bazel_location, 'build', '-c', 'opt', \
      'tensorflow/examples/android:tensorflow_native_libs', \
       '--crosstool_top=//external:android/crosstool', \
       '--cpu=' + cpuType, \
       '--host_crosstool_top=@bazel_tools//tools/cpp:toolchain'
}

//copyTFLibs does not work if the libs exist in the project, so I have to delete them first
task deleteTFLibs(type: Delete){
    delete 'lib/tf-libs.jar', 'lib/' + cpuType
}

task copyTFLibs(type: Copy) {
    from(tensorflow_location + 'bazel-bin/tensorflow/examples/android') { include '**/*.so' }
    into nativeDir
    duplicatesStrategy = 'include'
}


task packageTFLibs(type: Zip) {
    destinationDir file("lib")
    baseName 'tf-libs'
    extension 'jar'
    from fileTree(dir: 'lib', include: '**/*.so')
    into 'lib/'
}


afterEvaluate {
    println "Building TF jar"
    deleteTFLibs.dependsOn buildTFLib
    copyTFLibs.dependsOn deleteTFLibs
    packageTFLibs.dependsOn copyTFLibs
    assemble.dependsOn packageTFLibs
    assembleDebug.dependsOn packageTFLibs
}

dependencies {
    compile 'com.google.code.gson:gson:2.5'
    compile fileTree(dir: 'lib', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    testCompile 'junit:junit:4.12'
}
