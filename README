This was the way how I integrated it

Install tensorflow and do as described in:
https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/android


GRADLE:
-  I had to modify the gradle script to support the architecture and to integrate the tf native lib in the project
(compile tf libs, build tf lite for android and then copy the lib to my project then build the APK). 
-  I also had to modify the gradle
script to include the java interfaces for the tf android lib. These are located in tensorflow_location + 'tensorflow/contrib/android/java/'
-  I also have to add "aaptOptions "{ noCompress 'pb' }" to the gradle file because this indicates to not to compress the TF pb file
-  If i build the project the TF libs are built and integrated AFTER the APK is built. Therefore I have to build the project twice in order to get the
TF libs into the APK. (FIX THIS!)

Dir Structure

-  I had to copy the model file (protobuf or pb file) in the app app/src/main/assets/

Code:

The code explains it by itself :). TFTextClassification is a good template for TF Classification in android. The Dashboard class (which would be the main)
gets all the config that is used for TFTextClassification in order to classify something.